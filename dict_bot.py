# –í google colab –¥–æ–±–∞–≤–∏—Ç—å: !pip install pyTelegramBotAPI
# –ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ —Å–ª–æ–≤–æ ‚Äî –Ω—É–∂–Ω–æ –µ–≥–æ –ø—Ä–æ–ø–∏—Å–∞—Ç—å –≤ –æ–±—ä–µ–∫—Ç DEFINITOINS –Ω–∞ 13 —Å—Ç—Ä–æ—á–∫–µ
# –í–∞–∂–Ω–æ –≤—Å–µ –Ω–æ–≤—ã–µ –∞–±–±—Ä–∏–≤–∏–∞—Ç—É—Ä—ã –≤ –∫–æ–¥–µ –ø–∏—Å–∞—Ç—å —Ç–æ–ª—å–∫–æ —Å –º–∞–ª–µ–Ω—å–∫–∏—Ö –±—É–∫–≤
# –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Ç–µ–ª–µ–≥—Ä–∞–º –º–æ–∂–µ—Ç –ø–∏—Å–∞—Ç—å –∏ —Å –±–æ–ª—å—à–æ–π –∏ —Å –º–∞–ª–µ–Ω—å–∫–æ–π ‚Äî¬†–∫–æ–¥ –≤—Å–µ–≥–¥–∞ –ø—Ä–∏–≤–æ–¥–∏—Ç –∫ —Å—Ç—Ä–æ—á–Ω—ã–º

from telebot import TeleBot, types

bot = TeleBot(token='set your tocken here', parse_mode='html')
# —Å–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–∞

# —Å–ª–æ–≤–∞—Ä—å —Å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è–º–∏ –∏ –∞–±–±—Ä–µ–≤–∏–∞—Ç—É—Ä–∞–º–∏, –∫–æ—Ç–æ—Ä—ã–µ –∑–Ω–∞–µ—Ç –±–æ—Ç
# –≤ —Ñ–æ—Ä–º–∞—Ç–µ:
# '–∫–ª—é—á–µ–≤–∞—è —Ñ—Ä–∞–∑–∞': '—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ –µ–π –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ'
DEFINITOINS = {
    'qc': 'quality contrlo',
    'qa': 'quality assuarance',
    'tms': 'test management system',
    'istqb': 'international software testing qualifications board',
    'rps': 'requests per second',
    'ci/cd': 'continuous integration cintinuous development',
    'sdls': 'software development lige cycle',
    'crud': 'create, read, update, delete',
    'adb': 'android debug bridge',
    'dns': 'domain names system',
    'regression testing': 'a type of change-related testing to detect whether defects have been introduced or uncovered in unchanged areas of the software',
    'smoke test': 'test suite that covers the main functionality of a component or system to determine whether it works properly before planned testing begins',
    'api': 'a type of interface in which the components or systems involved exchange information in a defined formal structure',
}

# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã '/start'
@bot.message_handler(commands=['start'])
def start_command_handler(message: types.Message):
    # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –Ω–∞ –∫–æ–º–∞–Ω–¥—É '/start'
    bot.send_message(
        chat_id=message.chat.id, # id —á–∞—Ç–∞, –≤ –∫–æ—Ç–æ—Ä—ã–π –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ
        text='ü§ì Hi! I can help you to decipher complicated terms and abbriviations both in English and in Russian ü§ì',)

# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@bot.message_handler()
def message_handler(message: types.Message):
    # –ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –∫–ª—é—á–µ–≤—É—é —Ñ—Ä–∞–∑—É –≤ —Å–ª–æ–≤–∞—Ä–µ
    definition = DEFINITOINS.get(
        message.text.lower(), # –ø—Ä–∏–≤–æ–¥–∏–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É
    )
    # –µ—Å–ª–∏ —Ñ—Ä–∞–∑—ã –Ω–µ—Ç –≤ —Å–ª–æ–≤–∞—Ä–µ, —Ç–æ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è definition –±—É–¥–µ—Ç –∏–º–µ—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ None
    # –ø—Ä–æ–≤–µ—Ä—è–µ–º —ç—Ç–æ —É—Å–ª–æ–≤–∏–µ
    if definition is None:
        # –µ—Å–ª–∏ –∫–ª—é—á–µ–≤–∞—è —Ñ—Ä–∞–∑–∞ –Ω–µ –±—ã–ª–∞ –Ω–∞–π–¥–µ–Ω–∞ –≤ —Å–ª–æ–≤–∞—Ä–µ
        # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç
        bot.send_message(
            chat_id=message.chat.id,
            text= 'üòã I do not know this term yet. Try and check it here: https://glossary.istqb.org/ üòã',)
        
        # –≤—ã—Ö–æ–¥–∏–º –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏
        return
    
    # –µ—Å–ª–∏ –∫–ª—é—á–µ–≤–∞—è —Ñ—Ä–∞–∑–∞ –±—ã–ª–∞ –Ω–∞–π–¥–µ–Ω–∞, —Ñ–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –µ–≥–æ
    # –µ—Å–ª–∏ –ø–µ—Ä–µ–¥ —Å—Ç—Ä–æ–∫–æ–π –ø–æ—Å—Ç–∞–≤–∏—Ç—å –±—É–∫–≤—É f, —Ç–æ –≤ —Ñ–∏–≥—É—Ä–Ω—ã—Ö —Å–∫–æ–±–∫–∞—Ö {} –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ :)
    bot.send_message(
        chat_id=message.chat.id,
        text=f'Definition:\n<code>{definition}</code>',
    )

    bot.send_message(
        chat_id=message.chat.id,
        text= 'ü§ì I am waiting for the next term ü§ì',
    )


# –≥–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã
def main():
    # –∑–∞–ø—É—Å–∫–∞–µ–º –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞
    bot.infinity_polling()


if __name__ == '__main__':
    main()
